{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "Jianhua DevOps Demo OpenVPN Server's Sercurity and Message Components",

	"Parameters": {

		"CompanyName": {
			"Description": "Name of the company.",
			"Type": "String"
		},

		"VpcId": {
			"Description": "VPC Id",
			"Type": "String"
		},

		"VpcCidrBlock": {
			"Description": "Cidr Block for the VPC",
			"Type": "String"
		},

		"CriticalAlertEmail": {
			"Description": "This email address will receive all production autoscaling event notifications.",
			"Type": "String"
		},

		"BucketKeys": {
			"Description": "Bucket hosting vpn keys.",
			"Type": "String"
		},

		"BucketScripts": {
			"Description": "Bucket hosting bootstrap scripts.",
			"Type": "String"
		},

		"BucketBinaries": {
			"Description": "Bucket hosting binary files.",
			"Type": "String"
		},

		"BucketStacks": {
			"Description": "Bucket hosting binary files.",
			"Type": "String"
		},

		"PeeredVpcCidr1": {
			"Description": "Peered VPC CIDR 1.",
			"Type": "String"
		}

	},

	"Conditions": {
		"CreatePeeredVpcRule1": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "PeeredVpcCidr1" }, "" ] } ] }
	},

	"Resources": {

		"Role": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [ {
						"Effect": "Allow",
						"Principal": {
							"Service": [ "ec2.amazonaws.com" ]
						},
						"Action": [ "sts:AssumeRole" ]
					} ]
				},
				"Path": "/core/"
			}
		},

		"Profile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/core/",
				"Roles": [
					{ "Ref": "Role" }
				]
			}
		},

		"PolicyRoute": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "PolicyRoute",
				"PolicyDocument": {
					"Statement": [ {
						"Action": [
							"ec2:CreateRoute",
							"ec2:DescribeRouteTables",
							"ec2:ReplaceRoute"
						],
						"Effect": "Allow",
						"Resource": [ "*" ]
					} ]
				},
				"Roles": [
					{ "Ref": "Role" }
				]
			}
		},

		"PolicyEip": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "PolicyEip",
				"PolicyDocument": {
					"Statement": [ {
						"Action": [
							"ec2:AssociateAddress"
						],
						"Effect": "Allow",
						"Resource": [ "*" ]
					} ]
				},
				"Roles": [
					{ "Ref": "Role" }
				]
			}
		},

		"PolicySourceDestCheck": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "PolicySourceDestCheck",
				"PolicyDocument": {
					"Statement": [ {
						"Action": [
							"ec2:ModifyInstanceAttribute"
						],
						"Effect": "Allow",
						"Resource": [ "*" ]
					} ]
				},
				"Roles": [
					{ "Ref": "Role" }
				]
			}
		},

		"PolicyS3VpnKeys": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "PolicyS3VpnKeys",
				"PolicyDocument": {
					"Statement": [ {
						"Action": [
							"s3:ListAllMyBuckets"
						],
						"Effect": "Allow",
						"Resource": [ "arn:aws:s3:::*" ]
					}, {
						"Action": [
							"s3:ListBucket",
							"s3:GetObject"
						],
						"Effect": "Allow",
						"Resource": [
							{ "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "BucketKeys" }, "/openvpn/server" ] ] },
							{ "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "BucketKeys" }, "/openvpn/server/*" ] ] }
						]
					} ]
				},
				"Roles": [
					{ "Ref": "Role" }
				]
			}
		},

		"S3BucketAccess": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "S3BucketAccess",
				"PolicyDocument": {
					"Statement": [ {
						"Action": [
							"s3:ListAllMyBuckets"
						],
						"Effect": "Allow",
						"Resource": [ "arn:aws:s3:::*" ]
					}, {
						"Action": [
							"s3:ListBucket",
							"s3:GetObject"
						],
						"Effect": "Allow",
						"Resource": [
							{ "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "BucketScripts" } ]]},
							{ "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "BucketScripts" }, "/*" ]]},
							{ "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "BucketBinaries" } ]]},
							{ "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "BucketBinaries" }, "/*" ]]},
							{ "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "BucketStacks" } ]]},
							{ "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "BucketStacks" }, "/*" ]]}
						]
					} ]
				},
				"Roles": [
					{ "Ref": "Role" }
				]
			}
		},

		"SnsVpnSAutoscale" : {
			"Type": "AWS::SNS::Topic",
			"Properties": {
				"TopicName": "VpnAutoscale",
				"DisplayName": { "Fn::Join": [ "", [ "CRITICAL: ", { "Ref": "CompanyName" }, " System Alert - OpenVPN Server" ] ] },
				"Subscription": [
					{ "Endpoint": { "Ref": "CriticalAlertEmail" }, "Protocol": "email" }
				]
			}
		},

		"SecurityGroupVpn": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Security rules for VPN servers.",
				"VpcId": { "Ref": "VpcId" },
				"SecurityGroupIngress": [ {
						"IpProtocol": "udp",
						"FromPort": "1194",
						"ToPort": "1194",
						"CidrIp": "0.0.0.0/0"
					}
				],
				"SecurityGroupEgress": [ {
						"IpProtocol": "-1",
						"FromPort": "0",
						"ToPort": "65535",
						"CidrIp": { "Ref": "VpcCidrBlock" }
					}, {
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"CidrIp": "0.0.0.0/0"
					}, {
						"IpProtocol": "tcp",
						"FromPort": "443",
						"ToPort": "443",
						"CidrIp": "0.0.0.0/0"
					}, {
						"IpProtocol": "udp",
						"FromPort": "53",
						"ToPort": "53",
						"CidrIp": "0.0.0.0/0"
					}, {
						"IpProtocol": "udp",
						"FromPort": "123",
						"ToPort": "123",
						"CidrIp": "0.0.0.0/0"
					}
				],
				"Tags": [
					{ "Key": "Name", "Value": "Sg - OpenVpn Server" },
					{ "Key": "Segment", "Value": "core" },
					{ "Key": "Vpc", "Value": "Demo-Infra-VPC" }
				]
			}
		}

	},

	"Outputs" : {

		"Profile": {
			"Description": "IAM Profile for VPN",
			"Value": { "Ref": "Profile" }
		},

		"Role": {
			"Description": "IAM Role for VPN",
			"Value": { "Ref": "Role" }
		},

		"SnsVpnSAutoscale": {
			"Description": "SNS Topic to be used by the VPN autoscaling group",
			"Value": { "Ref": "SnsVpnSAutoscale" }
		},

		"SecurityGroupVpn": {
			"Description": "Security Group for VPN instances",
			"Value": { "Ref": "SecurityGroupVpn" }
		}
	}
}
